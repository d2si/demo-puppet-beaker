require 'rake'
require 'rspec/core/rake_task'
require 'puppetlabs_spec_helper/rake_tasks'
require 'puppet-lint/tasks/puppet-lint'

RSpec::Core::RakeTask.new(:rspec) do |t|
  t.pattern = 'spec/*/*_spec.rb'
  t.rspec_opts = File.read("spec/spec.opts").chomp || ""
end

LINT_IGNORES = ['rvm']
 
namespace :lint do
  desc "Check puppet module code style."
  task :ci do
    begin
      require 'puppet-lint'
    rescue LoadError
      fail 'Cannot load puppet-lint, did you install it?'
    end
     
    success = true
     
    linter = PuppetLint.new
    linter.configuration.log_format =
      '%{path}:%{linenumber}:%{check}:%{KIND}:%{message}'
     
    lintrc = ".puppet-lintrc"
    if File.file?(lintrc)
      File.read(lintrc).each_line do |line|
        check = line.sub(/--no-([a-zA-Z0-9_]*)-check/, '\1').chomp
        linter.configuration.send("disable_#{check}")
      end
    end
     
    FileList['**/*.pp'].each do |puppet_file|
      if puppet_file.start_with? 'modules'
        parts = puppet_file.split('/')
        module_name = parts[1]
        next if LINT_IGNORES.include? module_name
      end
       
      puts "Evaluating code style for #{puppet_file}"
      linter.file = puppet_file
      linter.run
      success = false if linter.errors?
    end
     
    abort "Checking puppet module code style FAILED" if success.is_a?(FalseClass)
  end
end

desc "Run beaker tests"
task 'beaker:test' => [:set_beaker_variables] do |t,args|
  sh(build_beaker_command args)
end

task :set_beaker_variables do |t,args|
  puts 'Setting environment variables for testing'
  if ENV['BEAKER_git_branch']
    @git_branch = ENV['BEAKER_git_branch']
  end
  if ENV['BEAKER_setfile']
    @hosts_config = ENV['BEAKER_setfile']
  end
  if ENV['BEAKER_test_file']
    @test_file = ENV['BEAKER_test_file']
  end
  if ENV['BEAKER_provision']
    @provision = ENV['BEAKER_provision']
  end
  if ENV['BEAKER_preserve_hosts']
    @preserve_hosts = ENV['BEAKER_preserve_hosts']
  end
  if ENV['BEAKER_validate']
    @validate = ENV['BEAKER_validate']
  end
end

def build_beaker_command(args)
  cmd = ["beaker"]
  if File.exists?(@hosts_config)
    cmd << "--hosts #{@hosts_config}"
  end
  if File.exists?('./spec/acceptance/beaker_helper.rb')
    cmd << "--pre-suite ./spec/acceptance/beaker_helper.rb"
  end
  if @test_file
    cmd << "--tests ./spec/acceptance/beaker/#{@test_file}"
  else
    if File.exists?("./spec/acceptance/beaker")
      cmd << "--tests ./spec/acceptance/beaker"
    end
  end
  if @provision == "no"
    cmd << "--no-provision"
  end
  if @preserve_hosts
    cmd << "--preserve-hosts #{@preserve_hosts}"
  end
  if @validate == "no"
    cmd << "--no-validate"
  end
  cmd.join(" ")
end
